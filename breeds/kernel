#! /usr/bin/env bash

function help {
    cat <<__EOF__

    usage: orcd kernel [ list | status | download | c-kernel
                       | cl-kernel | cy-kernel | llvm-kernel]

    list: Lists all installed kernels
    status: Shows current kernel information
    c-kernel: Download and compile latest kernel.org kernel
    cl-kernel: Download and compile using localmodconfig kernel
    llvm-kernel: Download and compile latest kernel using clang

    WARNING: the *-kernel functions will produce .deb packages for installation.
             these will be kept in the user's $HOME dir.

__EOF__
}

function install_deps {
    echo "installing dependencies"
    sudo apt update && sudo apt upgrade
    sudo apt install -y build-essential libncurses5-dev gcc libssl-dev grub2 bc
    clear
    echo "Dependencies installed, proceeding with the next step"
    clear
}

function download {
    echo "Downloading kernel to /usr/src/"
    sudo wget https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.6.2.tar.xz -cO /usr/src/kernel.tar.xz
    echo "Kernel downloaded!"
    clear
    sleep 2
}

function list_kernels {
    KNAME=$(uname -s)
    KTYPE=$(uname -r)
    KARCH=$(uname -m)
    KPROC=$(uname -p)

    apt_kernels=$(dpkg --list | grep linux-image)
    manual_kernels=$(ls -l /lib/modules/)

    echo "Running kernel:"
    echo "Kernel type: $KNAME"
    echo "Kernel version: $KTYPE"
    echo "Kernel arch: $KARCH"
    echo "Kernel proc: $KPROC"
    echo "------------------------------"
    echo "Kernels installed by apt:"
    echo "$apt_kernels"
    echo "------------------------------"
    echo "Manually installed kernels:"
    echo "$manual_kernels"
}

function status {
    KNAME=$(uname -s)
    KTYPE=$(uname -r)
    KARCH=$(uname -m)
    KPROC=$(uname -p)

    echo "Current kernel:"
    echo "Kernel type: $KNAME"
    echo "Kernel version: $KTYPE"
    echo "Kernel arch: $KARCH"
    echo "Kernel proc: $KPROC"
}

function c-kernel {
    install_deps
    download
    echo "Entering kernel source directory...."
    sleep 2

    # Decompress Kernel

    cd /usr/src/ || exit
    echo "Decompressing kernel tarball"
    sudo tar -xvf kernel.tar.xz
    cd kernel || exit

    echo "Kernel won't be configured, please proceed manually"
    make clean
    zcat /proc/config.gz > .config || exit
    make oldconfig || exit
    make menuconfig || exit

    clear

}

case $1 in
    help) help ;;

    list)
       list_kernels;;

    status)
         ;;

    download)
         ;;

    c-kernel)
         ;;

    cl-kernel)
         ;;

    llvm-kernel)
        ;;

    *) help;;
esac


# 2020 - VentGrey
